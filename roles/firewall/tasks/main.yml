---
# tasks file for firewall

# TODO role files

## Installation
- name: install dependencies
  apt: name="{{ item }}" state=present update_cache=yes cache_valid_time=3600
  loop:
    - iptables
    - iptables-persistent
    - netfilter-persistent
  become: True



## Firewall configuration
# Disable ipv6
- name: disable ipv6 in the host kernel
  shell: sudo sysctl net.ipv6.conf.all.disable_ipv6=1


# Flush the ruleset
- name: iptables flush filter
  iptables:
    chain: "{{ item }}"
    flush: yes
  with_items:  [ 'INPUT', 'FORWARD', 'OUTPUT' ]
  become: yes

- name: iptables flush nat
  iptables:
    table: nat
    chain: '{{ item }}'
    flush: yes
  with_items: [ 'INPUT', 'OUTPUT', 'PREROUTING', 'POSTROUTING' ]
  become: yes


## INPUT CHAIN



# Allow established and related
- name: Allow related and established connections
  iptables:
    chain: INPUT
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
  become: yes

# Allow vagrant NFS mounts when using vagrant
- name: Allow vagrant NFS mounts when using vagrant
  iptables:
    chain: INPUT
    protocol: udp
    source: 127.0.0.1
    destination: 127.0.0.1
    destination_port: 111
    jump: ACCEPT
  become: True
  when: in_vagrant is defined

# Allow on localhost
- name: Allow on localhost
  iptables:
    chain: INPUT
    source: 127.0.0.1
    destination: 127.0.0.1
    in_interface: lo
    jump: ACCEPT
  become: True

# SSH for maintainance
- name: Host allow new ssh conections
  iptables:
    chain: INPUT
    protocol: tcp
    destination_port: 22
    ctstate: NEW
    syn: match
    jump: ACCEPT
  become: True


- name: add iptables rules for openvpn
  include: openvpn.yml

- name: include logged default reject rules
  include: default_action.yml chain=INPUT action=REJECT


## FORWARD CHAIN
# Allow established and related
- name: Allow related and established connections
  iptables:
    chain: FORWARD
    ctstate: ESTABLISHED,RELATED
    jump: ACCEPT
  become: yes



## Hardcoded teammembers (no necessarity to do otherwise --> each team could create own local subnets)
# Teamcontainer
- name: Teamcontainer allow new ssh conections
  iptables:
    chain: FORWARD
    src_range: 10.42.{{ item|replace('team','')|int }}.1-10.42.{{ item|replace('team','')|int }}.5
    dst_range: 10.40.{{ item|replace('team','')|int }}.1-10.40.{{ item|replace('team','')|int }}.255
    protocol: tcp
    destination_port: 22
    ctstate: NEW
    syn: match
    jump: ACCEPT
  become: True
  with_items:
    - "{{groups['ad_containers']}}"
    - team254



# Temcontainer service ports TCP
- name: Teamcontainer allow new service conections (TCP)
  iptables:
    chain: FORWARD
    src_range: 10.42.{{ item[0]|replace('team','')|int }}.1-10.42.{{ item[0]|replace('team','')|int }}.5
    dst_range: 10.40.{{ item[0]|replace('team','')|int }}.1-10.40.{{ item[0]|replace('team','')|int }}.255
    protocol: tcp
    destination_port: "{{ item[1]|int }}"
    ctstate: NEW
    syn: match
    jump: ACCEPT
  become: True
  with_nested:
    - "{{groups['ad_containers']}}"
    - "{{ service_ports }}"



# Temcontainer service ports TCP
- name: Teamcontainer allow new service conections (TCP)
  iptables:
    chain: FORWARD
    src_range: "10.42.{{ item[0]|replace('team','')|int }}.1-10.42.{{ item[0]|replace('team','')|int }}.5"
    dst_range: "10.40.{{ item[0]|replace('team','')|int }}.1-10.40.{{ item[0]|replace('team','')|int }}.255"
    protocol: tcp
    destination_port: "{{ item[1]|int }}"
    ctstate: NEW
    syn: match
    jump: ACCEPT
  become: True
  with_nested:
    - team254
    - "{{ service_ports }}"



# Teamcontainer service ports UDP
- name: Teamcontainer allow new service conections (UDP from outside)
  iptables:
    chain: FORWARD
    src_range: "10.42.{{ item[0]|replace('team','')|int }}.1-10.42.{{ item[0]|replace('team','')|int }}.5"
    dst_range: "10.40.{{ item[0]|replace('team','')|int }}.1-10.40.{{ item[0]|replace('team','')|int }}.255"
    protocol: udp
    destination_port: "{{ item[1]|int }}"
    jump: ACCEPT
  become: True
  with_nested:
    - "{{groups['ad_containers']}}"
    - "{{ service_ports }}"



# Teamcontainer service ports UDP
- name: Teamcontainer allow new service conections (UDP from team254)
  iptables:
    chain: FORWARD
    src_range: "10.42.{{ item[0]|replace('team','')|int }}.1-10.42.{{ item[0]|replace('team','')|int }}.5"
    dst_range: "10.40.{{ item[0]|replace('team','')|int }}.1-10.40.{{ item[0]|replace('team','')|int }}.255"
    protocol: udp
    destination_port: "{{ item[1]|int }}"
    jump: ACCEPT
  become: True
  with_nested:
    - team254
    - "{{ service_ports }}"



# Teamcontainer service ports UDP
- name: Teamcontainer allow new service conections (UDP from inside)
  iptables:
    chain: FORWARD
    src_range: "10.40.{{ item[0]|replace('team','')|int }}.1-10.40.{{ item[0]|replace('team','')|int }}.255"
    dst_range: "10.42.{{ item[0]|replace('team','')|int }}.1-10.42.{{ item[0]|replace('team','')|int }}.5"
    protocol: udp
    jump: ACCEPT
  become: True
  with_items:
    - "{{groups['ad_containers']}}"
    - team254

# Gameserver(Scorebot) to team VMs
- name: Gameserver(Scorebot) to team VMs (including TCP, UDP, ...)
  iptables:
    chain: FORWARD
    source: 10.38.1.1
    dst_range: 10.40.{{ item[0]|replace('team','')|int }}.1-10.40.{{ item[0]|replace('team','')|int }}.255
    destination_port: "{{ item[1]|int }}"
    protocol: tcp
    ctstate: NEW
    syn: match
    jump: ACCEPT
  become: True
  with_nested:
    - "{{groups['ad_containers']}}"
    - "{{ service_ports }}"


# Jeopardy for each team
- name: Jeopardy allow new ssh conections
  iptables:
    chain: FORWARD
    src_range: "10.42.{{ item|replace('team','')|int }}.1-10.42.{{ item|replace('team','')|int }}.5"
    dst_range: "10.39.{{ item|replace('team','')|int }}.1-10.40.{{ item|replace('team','')|int }}.255"
    protocol: tcp
    destination_port: 22
    ctstate: NEW
    syn: match
    jump: ACCEPT
  become: True
  with_items:
    - "{{groups['ad_containers']}}"
    - team254



# Gamebridge
- name: allow everything for gamebr
  iptables:
    chain: FORWARD
    src_range: "10.42.{{ item|replace('team','')|int }}.1-10.42.{{ item|replace('team','')|int }}.5"
    dst_range: "10.38.{{ item|replace('team','')|int }}.1-10.40.{{ item|replace('team','')|int }}.255"
    jump: ACCEPT
  become: True
  with_items:
    - "{{groups['ad_containers']}}"
    - team254

- name: include logged default reject rules
  include: default_action.yml chain=FORWARD action=REJECT



## DEFAULT RULES
# Set the INPUT policy to accept
- name: Set the policy for the INPUT chain to ACCEPT
  iptables:
    chain: INPUT
    policy: ACCEPT
  become: yes

# Set the OUTPUT policy to accept
- name: Set the policy for the OUTPUT chain to ACCEPT
  iptables:
    chain: OUTPUT
    policy: ACCEPT
  become: yes

# Set the FORWARD policy to drop
- name: Set the policy for the FORWARD chain to DROP
  iptables:
    chain: FORWARD
    policy: ACCEPT
  become: yes



## Additional settings
# Enable ipv4 Forwarding
- name: enable ipv4 forwarding
  sysctl:
    name: net.ipv4.ip_forward
    value: '1'
    state: present
  become: yes


- name: persist rules (save)
  shell: netfilter-persistent save
  become: yes

- name: persist rules (reload)
  shell: netfilter-persistent reload
  become: yes

- name: enable netfilter-persistent
  systemd:
    name: netfilter-persistent
    enabled: yes
    state: started
  become: yes


# Save the configuration to a file
- name: fetch the iptables config for reference
  fetch:
    src: /etc/iptables/rules.v4
    dest: "{{ role_path }}/files/rules.v4"
  become: yes