- name: Check if ZFS Pool already added to LXD
  uri:
    url: "https://127.0.0.1:8443/1.0/storage-pools/default"
    method: GET
    status_code: 404,200
    headers:
      Accept: "application/json"
    validate_certs: False
    client_cert: "{{ role_path }}/files/lxd.cert"
    client_key: "{{ role_path }}/files/lxd.key"
  register: lxd_pool_check

- debug:
    msg: "{{ lxd_pool_check }}"





#- name: Adding ZFS Pool to LXD config on development system, zpool=rpool, dataset=lxd
#  when: lxd_pool_check.status == 404 and in_vagrant is defined
#  uri:
#    url: "https://127.0.0.1:8443/1.0/storage-pools"
#    method: POST
#    status_code: 201
#    body:
#      config:
#        zfs.pool_name: rpool
#      driver: zfs
#      name: default
#    body_format: json
#    headers:
#      Content-Type: "application/json"
#      Accept: "application/json"
#    validate_certs: False
#    client_cert: "{{ role_path }}/files/lxd.cert"
#    client_key: "{{ role_path }}/files/lxd.key"
#  register: lxd_zfs_pool_add
#- name:
#  debug:
#    msg: "{{ lxd_zfs_pool_add }}"



###

- name: create ZFS partition on free space (development system)
  parted:
    device: /dev/sda
    number: 4
    part_start: 67106816s
    state: present
  when: in_vagrant is defined
  register: partition
  become: True

#- name: resize new partition
#  command: parted /dev/sda resizepart 4 99%
#  when: in_vagrant is defined
#  become: True

- name: get disk info
  parted:
    device: /dev/sda
    unit: MiB
  register: sda_info
  when: in_vagrant is defined
  become: True


- name: create pool if fstype of 4th partition is not zfs
  command: zpool create -f -o ashift=12 -O atime=off -O dedup=off -O compression=lz4 -O normalization=formD rpool /dev/sda4
  when: partition.changed and sda_info.partitions.3.fstype != "zfs" and in_vagrant is defined
  register: pool
  become: True


- name: add dataset lxd
  command: zfs create rpool/lxd
  become: True
  when: in_vagrant is defined
  ignore_errors: True


###


# new ZFS Pool: Status 201
# TODO dev description
- name: Adding existing ZFS Dataset to LXD config on production system (pool/dataset must be created manually)
  when: lxd_pool_check.status == 404 #and not in_vagrant
  uri:
    url: "https://127.0.0.1:8443/1.0/storage-pools"
    method: POST
    status_code: 201
    body:
      config:
        source: rpool/lxd
      driver: zfs
      name: default
    body_format: json
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    validate_certs: False
    client_cert: "{{ role_path }}/files/lxd.cert"
    client_key: "{{ role_path }}/files/lxd.key"
  register: lxd_zfs_pool_add
- name:
  debug:
    msg: "{{ lxd_zfs_pool_add }}"




# 
# results in: Gerät root wurde zu default hinzugefügt
# results in: error: device already exists

- name: Adding root disk with path=/ and pool=default to profile default
  uri:
    url: "https://127.0.0.1:8443/1.0/profiles/default"
    method: PATCH
    status_code: 200
    body:
      devices:
        root:
          path: /
          pool: default
          type: disk
    body_format: json
    headers:
      Content-Type: "application/json"
      Accept: "application/json"
    validate_certs: False
    client_cert: "{{ role_path }}/files/lxd.cert"
    client_key: "{{ role_path }}/files/lxd.key"
  register: lxd_root_device_default
- name:
  debug:
    msg: "{{ lxd_root_device_default }}"


#
## Docker is extremly slowly running with the inefficient vfs backend
## when running nested in a container with ZFS filesystem
## so we will create btrfs-formated Zvols and mount them in the container
## see: https://www.bjonnh.net/article/20181202_lxdocker_btrfs/
## see: https://github.com/lxc/lxd/issues/2305
#
#- name: add Zvols parent
#  command: zfs create rpool/docker
#  become: True
#  ignore_errors: True
#
#- name: add Zvols for btrfs
#  command: "zfs create rpool/docker/{{ item }}"
#  become: True
#  ignore_errors: True
#  with_items:
#    - "{{groups['ad_containers']}}"
#
#- name: Create btrfs filesystems on zvols
#  filesystem:
#    fstype: btrfs
#    dev: "/dev/zvol/rpool/docker/{{ item }}"
#  with_items:
#    - "{{groups['ad_containers']}}"
#
#- name: Mount a btrfs filesystem in team container (for Docker)
#  uri:
#    url: "https://127.0.0.1:8443/1.0/containers/{{ item }}"
#    method: PATCH
#    status_code: 200
#    body:
#      devices:
#        docker:
#          path: /var/lib/docker
#          source: "/dev/zvol/rpool/docker/{{ item }}"
#          type: disk
#    body_format: json
#    headers:
#      Content-Type: "application/json"
#      Accept: "application/json"
#    validate_certs: False
#    client_cert: "{{ role_path }}/files/lxd.cert"
#    client_key: "{{ role_path }}/files/lxd.key"
#  register: lxd_mount_btfs_for_docker
#  with_items:
#    - "{{groups['ad_containers']}}"
#- name:
#  debug:
#    msg: "{{ lxd_mount_btfs_for_docker }}"
#
